name: Integration Tests
on:
  pull_request:
    branches:
      - main
  workflow_dispatch:
    branches:
      - main
    inputs:
      prurl:
        description: PR Url
        required: false
      repourl:
        description: Repo Url
        required: false      
      notifyemail:
        description: Email to notify
        required: false
      activityid:
        description: Civi activity id
        required: false
jobs:
  phpunit:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - drupal: '^9.1'
            civicrm: 'dev-master'
    name: ${{ github.event.inputs.repourl }} | Drupal ${{ matrix.drupal }} | CiviCRM ${{ matrix.civicrm }}
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: db
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - uses: actions/checkout@v2
      - uses: shivammathur/setup-php@v2
        with:
            php-version: 7.3
            extensions: dom, curl, libxml, mbstring, zip, pdo, mysql, pdo_mysql, bcmath, soap, intl, gd, exif, iconv
            coverage: none
            tools: composer:v1
      - name: starttimer
        run: |
          cd $GITHUB_WORKSPACE
          date +%s > carrottimerfile
      - name: Get composer cache directory
        id: composercache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - uses: actions/cache@v2
        with:
            path: ${{ steps.composercache.outputs.dir }}
            key: ${{ runner.os }}-${{ matrix.drupal }}-composer-${{ hashFiles('**/composer.json') }}
            restore-keys: ${{ runner.os }}-composer-
      - name: Setup problem matchers for PHPUnit
        run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"
      - name: Download Drupal
        run: |
          COMPOSER_MEMORY_LIMIT=-1 composer create-project drupal/recommended-project:${{ matrix.drupal }} ~/drupal --no-interaction
          cd ~/drupal
          composer config extra.enable-patching true
          composer config extra.compile-mode all
          composer config minimum-stability dev
          composer config prefer-stable true
          composer config preferred-install dist
          # composer config repositories.0 composer https://packages.drupal.org/8
          COMPOSER_MEMORY_LIMIT=-1 composer require drupal/core-dev-pinned:${{ matrix.drupal }} --no-suggest
      - name: Download CiviCRM ${{ matrix.civicrm }}
        run: |
          cd ~/drupal
          COMPOSER_MEMORY_LIMIT=-1 composer require civicrm/civicrm-asset-plugin:'~1.1' civicrm/civicrm-{core,packages,drupal-8}:${{ matrix.civicrm }} --no-suggest --prefer-dist
      - name: Download mink-civicrm-helpers
        run: |
          cd ~/drupal
          COMPOSER_MEMORY_LIMIT=-1 composer require semperit/minkcivicrmhelpers
      - uses: nanasess/setup-chromedriver@master
      - name: Run chromedriver
        run: chromedriver &
      - name: Run php built-in server
        run: php -S 127.0.0.1:8080 -t ~/drupal/web &
      - name: Get some code to test
        if: ${{ github.event.inputs.repourl != 0 }}
        run: |
          mkdir -p ~/drupal/web/sites/default/files/civicrm/ext
          cd ~/drupal/web/sites/default/files/civicrm/ext
          git clone ${{ github.event.inputs.repourl }} thingtotest
      - name: Apply PR
        if: ${{ github.event.inputs.prurl != 0 }}
        run: |
          cd  ~/drupal/web/sites/default/files/civicrm/ext/thingtotest
          curl -o thingtopatch.patch ${{ github.event.inputs.prurl }}.patch
          git apply thingtopatch.patch
      - name: Run PHPUnit
        run: |
          mkdir $BROWSERTEST_OUTPUT_DIRECTORY
          cd ~/drupal/web
          ../vendor/bin/phpunit -c core sites/default/files/civicrm/ext/thingtotest/tests/phpunit/mink
        env:
          SYMFONY_DEPRECATIONS_HELPER: weak
          DEV_EXTENSION_DIR: /home/runner/drupal/web/sites/default/files/civicrm/ext
          SIMPLETEST_DB: mysql://root:@127.0.0.1:${{ job.services.mysql.ports[3306] }}/db
          SIMPLETEST_BASE_URL: http://127.0.0.1:8080
          MINK_DRIVER_ARGS_WEBDRIVER: '["chrome", {"browserName":"chrome","chromeOptions":{"args":["--disable-gpu", "--no-sandbox", "--headless"]}}, "http://127.0.0.1:9515"]'
          BROWSERTEST_OUTPUT_DIRECTORY: '${{ runner.temp }}/browser_output'
      - name: record disk usage
        # This needs to come before the artifacts are uploaded
        run: |
          cd /home/runner/drupal/web/sites/simpletest/browser_output
          du -s | cut -f1 > $GITHUB_WORKSPACE/carrotspacefile
      - uses: actions/upload-artifact@v2
        if: ${{ failure() || success() }}
        with:
          name: phpunit_browser_output
          # See https://www.drupal.org/project/drupal/issues/2992069#comment-12725521. Basically BROWSERTEST_OUTPUT_DIRECTORY
          # is poorly named/documented. It only controls the location of a temp file that lists uris for the generated files.
          # The actual location is ALWAYS `DRUPAL_ROOT . '/sites/simpletest/browser_output'`. See https://git.drupalcode.org/project/drupal/-/blob/af95c8490/core/tests/Drupal/Tests/BrowserHtmlDebugTrait.php#L145
          path: '/home/runner/drupal/web/sites/simpletest/browser_output'
      - name: send notification email
        if: ${{ failure() && (github.event.inputs.notifyemail != 0) }}
        uses: wadeww/send-email-action@v1
        with:
          server_address: smtp.gmail.com
          port: 465
          username: ${{secrets.MAIL_USERNAME}}
          # This can be a temporary app password, not the real password
          password: ${{secrets.MAIL_PASSWORD}}
          subject: CiviCARROT Mink tests ${{ github.event.inputs.repourl }}
          body: Visit https://github.com/semperit/CiviCARROT/actions/runs/${{ github.run_id }} to view logs and artifacts.
          to: ${{ github.event.inputs.notifyemail }}
          from: civicarrot@gmail.com
      - name: record stats
        if: ${{ github.event.inputs.activityid != 0 }}
        run: |
          cd $GITHUB_WORKSPACE
          STARTTIME=`cat carrottimerfile`
          TIMEUSED=$(( `date +%s` - $STARTTIME ))
          SPACEUSED=`cat carrotspacefile`         
          echo "{\"type":\"mink\",\"id\":${{ github.event.inputs.activityid }},\"bytes\":$SPACEUSED,\"seconds\":$TIMEUSED}"
          curl --user ${{secrets.REST_USER}}:${{secrets.REST_PASS}} -X POST -H "Content-type: application/json" -d "{\"id\":${{ github.event.inputs.activityid }},\"bytes\":$SPACEUSED,\"seconds\":$TIMEUSED}" https://webform-civicrm.io/githubaction/${{ github.event.inputs.activityid }}
