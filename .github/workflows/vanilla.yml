name: Unit Tests
on:
  pull_request:
    branches:
      - main
  workflow_dispatch:
    branches:
      - main
    inputs:
      matrix:
        description: matrix in json format
        required: true
        default: '{"include":[{"php-versions":"7.4","drupal":"~9.2.1","civicrm":"dev-master"}]}'
      prurl:
        description: PR Url
        required: false
      repourl:
        description: Repo Url
        required: false
      notifyemail:
        description: Notification email
        required: false
      contactid:
        description: Civi contact id
        required: false
jobs:
  phpunit:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(github.event.inputs.matrix) }}
    name: ${{ github.event.inputs.repourl }} | Drupal ${{ matrix.drupal }} | CiviCRM ${{ matrix.civicrm }}
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: db
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - uses: actions/checkout@v2
      - uses: shivammathur/setup-php@v2
        with:
            php-version: ${{ matrix.php-versions }}
            extensions: dom, curl, libxml, mbstring, zip, pdo, mysql, pdo_mysql, bcmath, soap, intl, gd, exif, iconv
            coverage: none
            tools: composer:v2
      - name: starttimer
        run: |
          cd $GITHUB_WORKSPACE
          date +%s > carrottimerfile
      - name: Get composer cache directory
        id: composercache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - uses: actions/cache@v2
        with:
            path: ${{ steps.composercache.outputs.dir }}
            key: ${{ runner.os }}-${{ matrix.drupal }}-composer-${{ hashFiles('**/composer.json') }}
            restore-keys: ${{ runner.os }}-composer-
      - name: Setup problem matchers for PHPUnit
        run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"
      - name: Download cv
        run: |
          cd $GITHUB_WORKSPACE
          git clone https://github.com/civicrm/cv.git civicrm-cv
          cd civicrm-cv
          # downloads-plugin is locked at 2.1 but that doesn't work with composer v2
          rm composer.lock
          composer global config --no-interaction --no-plugins allow-plugins.composer/installers true
          composer global config --no-interaction --no-plugins allow-plugins.drupal/core-composer-scaffold true
          composer global config --no-interaction --no-plugins allow-plugins.drupal/core-project-message true
          composer global config --no-interaction --no-plugins allow-plugins.civicrm/composer-compile-plugin true
          composer global config --no-interaction --no-plugins allow-plugins.civicrm/composer-downloads-plugin true
          composer global config --no-interaction --no-plugins allow-plugins.civicrm/civicrm-asset-plugin true
          composer global config --no-interaction --no-plugins allow-plugins.cweagans/composer-patches true
          COMPOSER_MEMORY_LIMIT=-1 composer install
      - name: Download Drupal
        run: |
          COMPOSER_MEMORY_LIMIT=-1 composer create-project drupal/recommended-project:${{ matrix.drupal }} ~/drupal --no-interaction
          cd ~/drupal
          composer config extra.enable-patching true
          composer config extra.compile-mode all
          composer config minimum-stability dev       
      - name: Workaround too-looseness of scssphp requirement in civi
        run: |
          COMPAREVERSIONS=`php -r 'echo "${{ matrix.civicrm }}" == "dev-master" ? "-1" : version_compare("5.41.0", "${{ matrix.civicrm }}");'`
          if [ "$COMPAREVERSIONS" = "1" ]; then
            cd ~/drupal
            COMPOSER_MEMORY_LIMIT=-1 composer require scssphp/scssphp:1.6.0
          fi
      - name: Download CiviCRM ${{ matrix.civicrm }}
        run: |
          cd ~/drupal
          COMPOSER_MEMORY_LIMIT=-1 composer require civicrm/civicrm-asset-plugin:'~1.1' civicrm/civicrm-{core,packages,drupal-8}:${{ matrix.civicrm }}
          COMPOSER_MEMORY_LIMIT=-1 composer require phpunit/phpunit:'^8.5' drush/drush
      - name: Install Drupal
        run: |
          cd ~/drupal
          ./vendor/drush/drush/drush -y -l http://civi.localhost site-install standard --db-url='mysql://root:@127.0.0.1:${{ job.services.mysql.ports[3306] }}/db' --site-name=TestCivi --account-pass=admin
          chmod +w web/sites/default
      - name: Install CiviCRM
        run: |
          cd ~/drupal
          $GITHUB_WORKSPACE/civicrm-cv/bin/cv core:install --cms-base-url=http://civi.localhost -m loadGenerated=1
      - name: Get some code to test
        if: ${{ github.event.inputs.repourl != 0 }}
        run: |
          mkdir -p ~/drupal/web/sites/default/files/civicrm/ext
          cd ~/drupal/web/sites/default/files/civicrm/ext
          git clone ${{ github.event.inputs.repourl }} thingtotest
      - name: Apply PR
        if: ${{ github.event.inputs.prurl != 0 }}
        run: |
          cd  ~/drupal/web/sites/default/files/civicrm/ext/thingtotest
          curl -o thingtopatch.patch ${{ github.event.inputs.prurl }}.patch
          git apply thingtopatch.patch
      - name: Run PHPUnit
        run: |
          export PATH=$PATH:$GITHUB_WORKSPACE/civicrm-cv/bin
          export CIVICRM_UF=UnitTests
          export CIVICRM_SETTINGS=~/drupal/web/sites/default/civicrm.settings.php
          cd ~/drupal/web/sites/default/files/civicrm/ext/thingtotest
          # TODO: We could do something like glob and iterate through any folders that are not Mink? But these are the only ones that typically autoload anyway.
          # This will use either phpunit.xml.dist or phpunit.xml depending on what they have, and hopefully that file points to a good bootstrap file
          if [ -d tests/phpunit/CRM ]; then ~/drupal/vendor/bin/phpunit tests/phpunit/CRM; fi
          if [ -d tests/phpunit/Civi ]; then ~/drupal/vendor/bin/phpunit tests/phpunit/Civi; fi
          if [ -d tests/phpunit/api ]; then ~/drupal/vendor/bin/phpunit tests/phpunit/api; fi
        env:
          COMPOSER_MEMORY_LIMIT: -1
          SYMFONY_DEPRECATIONS_HELPER: weak
      - name: send notification email
        if: ${{ failure() && (github.event.inputs.notifyemail != 0) }}
        uses: wadeww/send-email-action@v1
        with:
          server_address: smtp.gmail.com
          port: 465
          username: ${{secrets.MAIL_USERNAME}}
          # This can be a temporary app password, not the real password
          password: ${{secrets.MAIL_PASSWORD}}
          subject: CiviCARROT Unit tests ${{ github.event.inputs.repourl }}
          body: Visit https://github.com/semperit/CiviCARROT/actions/runs/${{ github.run_id }} to view logs and artifacts.
          to: ${{ github.event.inputs.notifyemail }}
          from: civicarrot@gmail.com
      - name: record stats
        if: ${{ (success() || failure()) && (github.event.inputs.contactid != 0) }}
        run: |
          cd $GITHUB_WORKSPACE
          STARTTIME=`cat carrottimerfile`
          TIMEUSED=$(( `date +%s` - $STARTTIME ))
          # TODO: SPACEUSED=`cat carrotspacefile`         
          SPACEUSED=00
          echo "{\"type\":\"plain\",\"id\":${{ github.event.inputs.contactid }},\"bytes\":\"$SPACEUSED\",\"seconds\":$TIMEUSED,\"repo\":\"${{ github.event.inputs.repourl }}\",\"pr\":\"${{ github.event.inputs.prurl }}\",\"run_id\":\"${{ github.run_id }}\"}"
          curl --user ${{secrets.REST_USER}}:${{secrets.REST_PASS}} -X POST -H "Content-type: application/json" -d "{\"type\":\"plain\",\"id\":${{ github.event.inputs.contactid }},\"bytes\":\"$SPACEUSED\",\"seconds\":$TIMEUSED,\"repo\":\"${{ github.event.inputs.repourl }}\",\"pr\":\"${{ github.event.inputs.prurl }}\",\"run_id\":\"${{ github.run_id }}\"}" https://civicrm.io/githubaction/${{ github.event.inputs.contactid }}
      # It seems like there should be shorthand for this instead of 8 lines
      - name: checkstatus1
        if: ${{ success() && (github.event.inputs.prurl != 0) }}
        run: |
          echo "RUNSTATUS=%E2%9C%94%EF%B8%8F+PASS" >> $GITHUB_ENV
      - name: checkstatus2
        if: ${{ failure() && (github.event.inputs.prurl != 0) }}
        run: |
          echo "RUNSTATUS=%E2%9D%8C+FAIL" >> $GITHUB_ENV
      - name: create comment on PR
        if: ${{ (success() || failure()) && (github.event.inputs.prurl != 0) }}
        run: |
          prurl=${{ github.event.inputs.prurl }}
          temp1=${prurl%/-/merge_requests/*}
          projectname=${temp1#https://*/}
          # close enough?
          urlencoded=${projectname//\//%2F}
          domain=${temp1%/$projectname}
          mrid=${prurl##*/}
          echo ${domain}/api/v4/projects/${urlencoded}/merge_requests/${mrid}/notes
          curl -H "Authorization: Bearer ${{secrets.LABCO_API_KEY}}" -X POST ${domain}/api/v4/projects/${urlencoded}/merge_requests/${mrid}/notes?body=${{ env.RUNSTATUS }}:+Unit+Tests:+https:%2F%2Fgithub.com%2Fsemperit%2FCiviCARROT%2Factions%2Fruns%2F${{ github.run_id }}
          
